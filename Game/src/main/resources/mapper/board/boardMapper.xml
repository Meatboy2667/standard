<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="board">
	<insert id="insert">
		insert into board(seq,title,content,writer,show) 
		values(board_seq.nextval, #{title}, #{content}, #{writer},'y')
	</insert>
	
	<insert id="addAttach">
		insert into attach(fullname, seq) values(#{fullName}, board_seq.CURRVAL) 
	</insert>
	
	<update id="update">
		update board set title=#{title}, content=#{content}, regDate=sysdate
		where seq=#{seq}
	</update>
	
	<delete id="delete">
		delete from board where seq=#{seq}
	</delete>
	
	<select id="getBoard" parameterType="int" resultType="boardDTO">
		select * from board where seq=#{seq}
	</select>
	
	<select id="getBoardList" resultType="boardDTO">
		<include refid="pagingHeader"></include>
			select rownum, seq, title, content, b.regDate, cnt, name,
				(select COUNT(*) from reply where seq = b.seq) AS recnt
			from board b, users u
			<include refid="search"></include>
			order by seq desc, b.regDate desc
		<include refid="pagingFooter"></include>
	</select>
	
	<!-- <select id="listPage" resultType="boardDTO" >
		select seq,title,content,writer,regDate
		from (select seq,title,content,writer,regDate,row_number() over(order by seq desc) as rNum 
		from board) b
		where rNum between #{rowStart} and #{rowEnd} order by seq desc
	</select> -->
	
	<update id="increaseCnt">
		update board set cnt = cnt + 1
		where seq = #{seq}
	</update>
	
	<select id="count" resultType="int">
		select count(*) from board b, users u
		<include refid="search"></include>
	</select>
	
	<!-- sql code 조각 -->
	<!-- 반복되는 sql의 일부를 sql 태그를 이용하여 따로 저장해놓을 수 있다. -->
	<sql id="search">
		<choose>
			<!-- 검색옵션이 전체 검색일 경우 -->
			<when test="searchOption  == 'all'">
				where b.writer = u.userid
				and
					(name like '%'||#{keyword}||'%'
					or content like '%'||#{keyword}||'%'
					or title like '%'||#{keyword}||'%')
			</when>
			<!-- 전체검색이 아닐경우 -->
			<otherwise>
				where b.writer = u.userid 
				and ${searchOption} like '%'||#{keyword}||'%'
			</otherwise>
		</choose>
	</sql>
	
	<sql id="pagingHeader">
		select * from (
			select rowNum AS rn, A.* from(
	</sql>
	<sql id="pagingFooter">
			) A
		) where rn between #{start} and #{end}
	</sql>
	
</mapper>